close all

% Load the image dataset
load ms_IKONOS.mat;

ms_IKONOS = load("ms_IKONOS.mat");

% Load the image dataset
load pan_IKONOS.mat;

pan_IKONOS = struct2cell(load("pan_IKONOS.mat"));

% Combine the multispectral and panchromatic data
ms_data = struct2cell(load("ms_IKONOS.mat"));

pan_data = load("pan_IKONOS.mat"); % Assuming that the panchromatic data is stored in a field named 'data'

multispectral_images = cellfun(@double , ms_data, 'UniformOutput', false);
panchromatic_image = pan_IKONOS{1, 1};

% Resize multispectral images to match panchromatic image size
[m, n] = size(panchromatic_image);
multispectral_images = cellfun(@(x) imresize(x, [m, n]), multispectral_images, 'UniformOutput', false);

% Combine multispectral images into a single matrix
multispectral_matrix = cell2mat(reshape(multispectral_images, 1, 1, []));

%X is an LÃ—N data matrix with L bands and N pixels;
mean_multispectral = mean(multispectral_matrix')';

% estimate the covariance matrix;
covariance_multispectral = multispectral_matrix*multispectral_matrix'/(m*n) - mean_multispectral*mean_multispectral'; 

[e1 e2] = eig(C); 
pc1 = e1(:,L)'*(X-m*ones(1,N)); %first PC; the last one is the largest in Matlab;
pc2 = e2(:,L-1)'*(X-m*ones(1,N)); %second PC;
pc1 = reshape(PC1,[N1, N2]); %reshape for display; spatial size N = N1 x N2;
figure; imshow(pc1,[]); %display;